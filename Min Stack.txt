
var MinStack = function() {
this.array=[];
this.minStack =[];
};

/** 
 * @param {number} val
 * @return {void}
 */
MinStack.prototype.push = function(val) {
    this.array.push(val);
    if(this.minStack.length==0){
       this.minStack.push(val);
    }
    else{
         this.minStack.push(Math.min(val,this.minStack[this.minStack.length-1]));
    }
      
  
};

/**
 * @return {void}
 */
MinStack.prototype.pop = function() {
    if(this.array.length!=0 && this.minStack.length!=0 ) {
    this.minStack.pop();
    return this.array.pop();
    }
    else return;
};

/**
 * @return {number}
 */
MinStack.prototype.top = function() {
    return this.array[this.array.length - 1];
};

/**
 * @return {number}
 */
MinStack.prototype.getMin = function() {
    return this.minStack[this.minStack.length - 1];
 
};

/** 
 * Your MinStack object will be instantiated and called as such:
 * var obj = new MinStack()
 * obj.push(val)
 * obj.pop()
 * var param_3 = obj.top()
 * var param_4 = obj.getMin()
 */